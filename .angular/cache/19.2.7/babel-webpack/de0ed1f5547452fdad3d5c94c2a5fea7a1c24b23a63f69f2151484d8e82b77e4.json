{"ast":null,"code":"import { provideZoneChangeDetection } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { appRoutes } from './app.routes';\nimport { provideClientHydration, withEventReplay } from '@angular/platform-browser';\nexport const appConfig = {\n  providers: [provideClientHydration(withEventReplay()), provideZoneChangeDetection({\n    eventCoalescing: true\n  }), provideRouter(appRoutes)]\n};","map":{"version":3,"names":["provideZoneChangeDetection","provideRouter","appRoutes","provideClientHydration","withEventReplay","appConfig","providers","eventCoalescing"],"sources":["/Users/cristianoteixeira/Documents/REPOS/ecommerce-platform/admin-frontend/src/app/app.config.ts"],"sourcesContent":["import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { appRoutes } from './app.routes';\nimport {\n  provideClientHydration,\n  withEventReplay,\n} from '@angular/platform-browser';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideClientHydration(withEventReplay()),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(appRoutes),\n  ],\n};\n"],"mappings":"AAAA,SAA4BA,0BAA0B,QAAQ,eAAe;AAC7E,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,SAAS,QAAQ,cAAc;AACxC,SACEC,sBAAsB,EACtBC,eAAe,QACV,2BAA2B;AAElC,OAAO,MAAMC,SAAS,GAAsB;EAC1CC,SAAS,EAAE,CACTH,sBAAsB,CAACC,eAAe,EAAE,CAAC,EACzCJ,0BAA0B,CAAC;IAAEO,eAAe,EAAE;EAAI,CAAE,CAAC,EACrDN,aAAa,CAACC,SAAS,CAAC;CAE3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}