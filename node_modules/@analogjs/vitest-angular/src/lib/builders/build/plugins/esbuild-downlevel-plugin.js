"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.esbuildDownlevelPlugin = esbuildDownlevelPlugin;
async function esbuildDownlevelPlugin() {
    const { transformWithEsbuild } = await Function('return import("vite")')();
    return {
        name: 'analogs-vitest-esbuild-downlevel-plugin',
        async transform(_code, id) {
            if (_code.includes('async (')) {
                const { code, map } = await transformWithEsbuild(_code, id, {
                    loader: 'js',
                    format: 'esm',
                    target: 'es2016',
                    sourcemap: true,
                    sourcefile: id,
                });
                return {
                    code,
                    map,
                };
            }
            return undefined;
        },
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXNidWlsZC1kb3dubGV2ZWwtcGx1Z2luLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvdml0ZXN0LWFuZ3VsYXIvc3JjL2xpYi9idWlsZGVycy9idWlsZC9wbHVnaW5zL2VzYnVpbGQtZG93bmxldmVsLXBsdWdpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHdEQXlCQztBQXpCTSxLQUFLLFVBQVUsc0JBQXNCO0lBQzFDLE1BQU0sRUFBRSxvQkFBb0IsRUFBRSxHQUFHLE1BQU8sUUFBUSxDQUM5Qyx1QkFBdUIsQ0FDeEIsRUFBcUMsQ0FBQztJQUN2QyxPQUFPO1FBQ0wsSUFBSSxFQUFFLHlDQUF5QztRQUMvQyxLQUFLLENBQUMsU0FBUyxDQUFDLEtBQWEsRUFBRSxFQUFVO1lBQ3ZDLElBQUksS0FBSyxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDO2dCQUM5QixNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLE1BQU0sb0JBQW9CLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRTtvQkFDMUQsTUFBTSxFQUFFLElBQUk7b0JBQ1osTUFBTSxFQUFFLEtBQUs7b0JBQ2IsTUFBTSxFQUFFLFFBQVE7b0JBQ2hCLFNBQVMsRUFBRSxJQUFJO29CQUNmLFVBQVUsRUFBRSxFQUFFO2lCQUNmLENBQUMsQ0FBQztnQkFFSCxPQUFPO29CQUNMLElBQUk7b0JBQ0osR0FBRztpQkFDSixDQUFDO1lBQ0osQ0FBQztZQUVELE9BQU8sU0FBUyxDQUFDO1FBQ25CLENBQUM7S0FDRixDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBhc3luYyBmdW5jdGlvbiBlc2J1aWxkRG93bmxldmVsUGx1Z2luKCkge1xuICBjb25zdCB7IHRyYW5zZm9ybVdpdGhFc2J1aWxkIH0gPSBhd2FpdCAoRnVuY3Rpb24oXG4gICAgJ3JldHVybiBpbXBvcnQoXCJ2aXRlXCIpJyxcbiAgKSgpIGFzIFByb21pc2U8dHlwZW9mIGltcG9ydCgndml0ZScpPik7XG4gIHJldHVybiB7XG4gICAgbmFtZTogJ2FuYWxvZ3Mtdml0ZXN0LWVzYnVpbGQtZG93bmxldmVsLXBsdWdpbicsXG4gICAgYXN5bmMgdHJhbnNmb3JtKF9jb2RlOiBzdHJpbmcsIGlkOiBzdHJpbmcpIHtcbiAgICAgIGlmIChfY29kZS5pbmNsdWRlcygnYXN5bmMgKCcpKSB7XG4gICAgICAgIGNvbnN0IHsgY29kZSwgbWFwIH0gPSBhd2FpdCB0cmFuc2Zvcm1XaXRoRXNidWlsZChfY29kZSwgaWQsIHtcbiAgICAgICAgICBsb2FkZXI6ICdqcycsXG4gICAgICAgICAgZm9ybWF0OiAnZXNtJyxcbiAgICAgICAgICB0YXJnZXQ6ICdlczIwMTYnLFxuICAgICAgICAgIHNvdXJjZW1hcDogdHJ1ZSxcbiAgICAgICAgICBzb3VyY2VmaWxlOiBpZCxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBjb2RlLFxuICAgICAgICAgIG1hcCxcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9LFxuICB9O1xufVxuIl19